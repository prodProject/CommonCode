package com.prod.basic.commom;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.HttpURLConnection;
import java.net.URL;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicHeader;
import org.apache.http.params.HttpConnectionParams;
import org.apache.http.protocol.HTTP;
import org.json.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

/**
 * Hello world!
 *
 */
public class App {
	private static JSONObject jsonObj;

	public static void main(String[] args) {
		String json = "{\\\"worker\\\":{\\\"dbInfo\\\":{\\\"lifeTime\\\":\\\"ACTIVE\\\"},\\\"name\\\":{\\\"firstName\\\":\\\"abcde\\\",\\\"lastName\\\":\\\"xyze\\\"},\\\"contactDetails\\\":{\\\"email\\\":{\\\"localPart\\\":\\\"abcde\\\",\\\"domain\\\":\\\"gmail.com\\\"},\\\"primaryMobile\\\":{\\\"code\\\":\\\"ISD_91\\\",\\\"number\\\":\\\"117347\\\"},\\\"secondryMobile\\\":[{\\\"code\\\":\\\"ISD_91\\\",\\\"number\\\":\\\"11747\\\"}]},\\\"type\\\":{\\\"personType\\\":\\\"WORKER\\\"},\\\"device\\\":{\\\"macId\\\":\\\"19:68:15:c4:77:ad\\\",\\\"osType\\\":\\\"ANDROID\\\",\\\"model\\\":\\\"Redmi\\\",\\\"deviceName\\\":\\\"H@cker\\\"}},\\\"password\\\":\\\"new\\\"}";
		//makePostJsonRequest(json);
		JSONParser parser = new JSONParser();
		try {
			jsonObj = (JSONObject) parser.parse(json);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		System.out.println(executePost(jsonObj));
	}

	protected void sendJson(final String json) {
		Thread t = new Thread() {
			public void run() {
				HttpClient client = new DefaultHttpClient();
				HttpConnectionParams.setConnectionTimeout(client.getParams(), 1000); // Timeout Limit
				HttpResponse response;

				try {
					HttpPost post = new HttpPost(
							"https://workertestservershubham.herokuapp.com/registrationWorkerMain");
					StringEntity se = new StringEntity(json);
					se.setContentType(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));
					post.setEntity(se);
					response = client.execute(post);

					/* Checking response */
					if (response != null) {
						InputStream in = response.getEntity().getContent(); // Get the data in the entity
					}

				} catch (Exception e) {
					e.printStackTrace();
					System.out.println("No connection");
				}
			}
		};
		t.start();
	}

	public static void makePostJsonRequest(String jsonString) {
		HttpClient httpClient = new DefaultHttpClient();
		try {
			HttpPost postRequest = new HttpPost("https://workertestservershubham.herokuapp.com/registrationWorkerMain");
			postRequest.setHeader("Content-type", "application/json");
			StringEntity entity = new StringEntity(jsonString);

			postRequest.setEntity(entity);

			long startTime = System.currentTimeMillis();
			HttpResponse response = httpClient.execute(postRequest);
			long elapsedTime = System.currentTimeMillis() - startTime;
			// System.out.println("Time taken : "+elapsedTime+"ms");

			InputStream is = response.getEntity().getContent();
			Reader reader = new InputStreamReader(is);
			BufferedReader bufferedReader = new BufferedReader(reader);
			StringBuilder builder = new StringBuilder();
			while (true) {
				try {
					String line = bufferedReader.readLine();
					if (line != null) {
						builder.append(line);
					} else {
						break;
					}
				} catch (Exception e) {
					e.printStackTrace();
				}
			}
			System.out.println(builder.toString());
			System.out.println("****************");
		} catch (Exception ex) {
			ex.printStackTrace();
		}
	}

	public static String executePost(JSONObject json) {
		HttpURLConnection connection = null;
		InputStream is = null;

		try {
			// Create connection
			URL url = new URL("https://workertestservershubham.herokuapp.com/registrationWorkerMain");
			connection = (HttpURLConnection) url.openConnection();
			connection.setRequestMethod("POST");
			connection.setRequestProperty("Content-Type", "text/plain");
			connection.setRequestProperty("Content-Length", Integer.toString(json.toString().getBytes().length));
			connection.setUseCaches(false);
			connection.setDoOutput(true);

			// Send request
			DataOutputStream wr = new DataOutputStream(connection.getOutputStream());
			wr.writeBytes(json.toString());
			wr.close();

			// Get Response
			try {
				is = connection.getInputStream();
			} catch (IOException ioe) {
				if (connection instanceof HttpURLConnection) {
					HttpURLConnection httpConn = (HttpURLConnection) connection;
					int statusCode = httpConn.getResponseCode();
					if (statusCode != 200) {
						is = httpConn.getErrorStream();
					}
				}
			}

			BufferedReader rd = new BufferedReader(new InputStreamReader(is));
			StringBuilder response = new StringBuilder(); // or StringBuffer if Java version 5+
			String line;
			while ((line = rd.readLine()) != null) {
				response.append(line);
				response.append('\r');
			}
			rd.close();
			return response.toString();

		} catch (Exception e) {

			e.printStackTrace();
			return null;

		} finally {
			if (connection != null) {
				connection.disconnect();
			}
		}
	}
}
